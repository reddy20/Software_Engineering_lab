/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Panels;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import JISS.Case;
import JISS.Main;
import JISS.User;

/**
 *
 * @author Sandesh
 */
public class TableView extends javax.swing.JPanel {

    /**
     * Creates new form TableView
     */
    public TableView() {
        initComponents();
         _rloc = null ;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        b_close = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        t_table = new javax.swing.JTable();
        l_heading = new javax.swing.JLabel();

        b_close.setText("x");
        b_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_closeActionPerformed(evt);
            }
        });

        t_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CIN", "Start Date", "Description", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        t_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                t_tableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(t_table);

        l_heading.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        l_heading.setForeground(new java.awt.Color(102, 153, 255));
        l_heading.setText("Heading");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(l_heading, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_close))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b_close)
                    .addComponent(l_heading, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void b_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_closeActionPerformed
        // TODO add your handling code here:
        rapplet.reset();
        if(rapplet._loginpanel.getCUT()==User.JUDGE || rapplet._loginpanel.getCUT()==User.LAWYER) 
            rapplet._mainview.show(rapplet._mv_p, Main.M_BLANK);
        else rapplet._mainview.show(rapplet._mv_p, Main.M_REGVIEW);
    }//GEN-LAST:event_b_closeActionPerformed

    private void t_tableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t_tableMouseReleased
        // TODO add your handling code here:
        Case _ref = null;
        DefaultTableModel dm = (DefaultTableModel) t_table.getModel() ;
        int _tcin = (Integer) dm.getValueAt(t_table.getSelectedRow(),0);
        for (Case _tref : _rloc) {
            if (_tref.getCIN() == _tcin) {
                _ref = _tref;
                break;
            }
        }
        if (_ref != null) {
            rapplet._caseinfo.setPrev(Main.M_TABVIEW);
            rapplet._caseinfo.setMode(CaseInfo.M_VC);
            rapplet._caseinfo.populateInfo(_ref);
            rapplet.reset();
            rapplet._mainview.show(rapplet._mv_p, Main.M_CASEINFO);
        } else {
            System.err.println("Error : LOC and Table entries dont match in Table View");
        }
    }//GEN-LAST:event_t_tableMouseReleased

    private Main rapplet;

    public void setRA(Main _ra) {
        rapplet = _ra;
    }
    
    private ArrayList<Case> _rloc ;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_close;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel l_heading;
    private javax.swing.JTable t_table;
    // End of variables declaration//GEN-END:variables

    public void setHeading(String _h){
        l_heading.setText(_h);
    }
    
    public void clearTable(){
        DefaultTableModel dm = (DefaultTableModel) t_table.getModel();
        dm.setRowCount(0);
    }
    
    public void populateTable(ArrayList<Case> _loc){
        clearTable(); 
        _rloc = _loc ;
        DefaultTableModel _dtm = (DefaultTableModel) t_table.getModel();
        for (Case _ctmp : _loc) {
            Case.Crime _cdtmp = _ctmp.getCrime();
            
            _dtm.addRow(new Object[]{_ctmp.getCIN(),_ctmp.getDoS().toString(),
                _cdtmp.getCT()+","+_cdtmp.getLoC()+","+_cdtmp.getCoC().toString(),
                _ctmp.getStatusString()});
        }
    }
}
