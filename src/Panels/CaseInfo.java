/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Panels;

import JISS.Case;
import JISS.Main;
import JISS.User;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Sandesh
 */
public class CaseInfo extends javax.swing.JPanel {

    /**
     * Creates new form CaseInfo
     */
    public CaseInfo() {
        initComponents();
        _cref = null;
        _tcase = null ;
               
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        b_close = new javax.swing.JButton();
        b_back = new javax.swing.JButton();
        l_heading = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_caseDetails = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        ta_hearingDetails = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        cb_hearingNo = new javax.swing.JComboBox();
        b_edit = new javax.swing.JButton();

        b_close.setText("x");
        b_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_closeActionPerformed(evt);
            }
        });

        b_back.setText("<");
        b_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_backActionPerformed(evt);
            }
        });

        l_heading.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        l_heading.setForeground(new java.awt.Color(51, 153, 255));
        l_heading.setText("Case Details");

        ta_caseDetails.setEditable(false);
        ta_caseDetails.setBackground(new java.awt.Color(204, 204, 204));
        ta_caseDetails.setColumns(20);
        ta_caseDetails.setRows(5);
        jScrollPane1.setViewportView(ta_caseDetails);

        ta_hearingDetails.setEditable(false);
        ta_hearingDetails.setBackground(new java.awt.Color(204, 204, 204));
        ta_hearingDetails.setColumns(20);
        ta_hearingDetails.setRows(5);
        jScrollPane2.setViewportView(ta_hearingDetails);

        jLabel1.setText("Select Hearing : ");

        cb_hearingNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_hearingNoActionPerformed(evt);
            }
        });

        b_edit.setText("Edit Done");
        b_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_editActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(l_heading, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE)
                        .addComponent(b_back)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_close))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_hearingNo, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_edit)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(b_close)
                        .addComponent(b_back))
                    .addComponent(l_heading, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_hearingNo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_edit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    Case _cref ;
    Case _tcase ;
    
    private void b_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_backActionPerformed
        // TODO add your handling code here:
        rapplet.reset();
        rapplet._mainview.show(rapplet._mv_p, _prev);
    }//GEN-LAST:event_b_backActionPerformed

    private void b_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_closeActionPerformed
        // TODO add your handling code here:
        rapplet.reset();
        if( rapplet._loginpanel.getCUT()==User.LAWYER ||
                rapplet._loginpanel.getCUT()==User.JUDGE )  rapplet._mainview.show(rapplet._mv_p, Main.M_BLANK);
        else rapplet._mainview.show(rapplet._mv_p, Main.M_REGVIEW);
    }//GEN-LAST:event_b_closeActionPerformed

    private void b_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_editActionPerformed
        // TODO add your handling code here:
        if(_mode==M_UC){
            if(!checkCaseDetails()) JOptionPane.showMessageDialog(rapplet._mv_p,"Invalid Entry Format");
            else {
                _cref.updateCD(_tcase);
                JOptionPane.showMessageDialog(rapplet._mv_p, "Successfully Edited Case Details");
                rapplet.reset();
                rapplet._mainview.show(rapplet._mv_p, Main.M_REGVIEW);
            }
        }
    }//GEN-LAST:event_b_editActionPerformed

    private void cb_hearingNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_hearingNoActionPerformed
        // TODO add your handling code here:
        int _hn = getCB_HN();
        setHearingDetails(_cref.getHearingDetails((_hn >= 0 ? _hn : 0)));
        rapplet.reset();
    }//GEN-LAST:event_cb_hearingNoActionPerformed

    private Main rapplet ;
    
    public void setRA(Main _ra){
        rapplet = _ra ;
    }
    
    private String _prev;
    
    public void setPrev(String _prev_i){
        _prev = _prev_i ;
    }
    
    private int _mode ;
    
    public void setMode(int _m){
        _mode = _m ;
    }
    
    public final static int M_VC = 1;
    public final static int M_UC = 2;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_back;
    private javax.swing.JButton b_close;
    private javax.swing.JButton b_edit;
    private javax.swing.JComboBox cb_hearingNo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel l_heading;
    private javax.swing.JTextArea ta_caseDetails;
    private javax.swing.JTextArea ta_hearingDetails;
    // End of variables declaration//GEN-END:variables

    public void setCaseDetails(String _cd){
        ta_caseDetails.setText(_cd);
    }

    public String getCaseDetails(){
        return ta_caseDetails.getText();
    }
    
    public boolean checkForString(String str){
        for(int i=0;i<str.length();i++)
        {
            if(!((str.charAt(i)>='a' && str.charAt(i)<='z')||(str.charAt(i)>='A' && str.charAt(i)<='Z'))) return false ;
        }
        return true;
    }
    
    public boolean checkCaseDetails(){
        _tcase = new Case(_cref);
        String str = ta_caseDetails.getText();
        
        int i,j ; String sub ;
        
        //CIN
        i = str.indexOf(":"); i+=2;
        j = str.indexOf("\n") ; 
        if(i==-1 || j==-1) return false ;
        sub = str.substring(i, j);
        for(int k=0;k<sub.length();k++) if(!(sub.charAt(k)>='0' && sub.charAt(k)<='9')) return false;
        
        //DoS
        if(j+1>=str.length()) return false;
        i = str.indexOf(":", j+1); i+=2;
        j = str.indexOf("\n", j+1);
        if(i==-1 || j==-1) return false ;
        sub = str.substring(i, j);
        try{
            Date _dref = Date.valueOf(sub) ;
            _tcase.updateDoS(_dref);
        }catch(IllegalArgumentException e){
            return false ;
        }
        
        //dn
        if(j+1>=str.length()) return false;
        i = str.indexOf(":", j+1); i+=2;
        j = str.indexOf("\n", j+1);
        if(i==-1 || j==-1) return false ;
        sub = str.substring(i, j);
        if(checkForString(sub)) _tcase.updateDN(sub);
        else return false ;
        
        //da
        if(j+1>=str.length()) return false;
        i = str.indexOf(":", j+1); i+=2;
        j = str.indexOf("\n", j+1);
        if(i==-1 || j==-1) return false ;
        sub = str.substring(i, j);
        _tcase.updateDA(sub);
        
        //ln
        if(j+1>=str.length()) return false;
        i = str.indexOf(":", j+1); i+=2;
        j = str.indexOf("\n", j+1);
        if(i==-1 || j==-1) return false ;
        sub = str.substring(i, j);
        _tcase.updateLN(sub);
        
        //ppn
        if(j+1>=str.length()) return false;
        i = str.indexOf(":", j+1); i+=2;
        j = str.indexOf("\n", j+1);
        if(i==-1 || j==-1) return false ;
        sub = str.substring(i, j);
        _tcase.updatePPN(sub);
        
        //jn
        if(j+1>=str.length()) return false;
        i = str.indexOf(":", j+1); i+=2;
        j = str.indexOf("\n", j+1);
        if(i==-1 || j==-1) return false ;
        sub = str.substring(i, j);
        _tcase.updateJN(sub);
        
        //cd has 2 \n at start and end ?
        if(j+1>=str.length()) return false; j = str.indexOf("\n", j+1); //blank line
        if(j+1>=str.length()) return false; j = str.indexOf("\n", j+1); //Case Details line
        if(j+1>=str.length()) return false; j = str.indexOf("\n", j+1); //---- line
            
            Date _doa,_doc; String _naf,_ct,_loc;
            //Date of Arrest
            if(j+1>=str.length()) return false;
            i = str.indexOf(":", j+1); i+=2;
            j = str.indexOf("\n", j+1);
            if(i==-1 || j==-1) return false ;
            sub = str.substring(i, j);
            try{
                _doa = Date.valueOf(sub) ;
            }catch(IllegalArgumentException e){
                return false ;
            }
            
            //Name of Arresting Officer
            if(j+1>=str.length()) return false;
            i = str.indexOf(":", j+1); i+=2;
            j = str.indexOf("\n", j+1);
            if(i==-1 || j==-1) return false ;
            sub = str.substring(i, j);
            if(checkForString(sub)) _naf = sub ;
            else return false ;
            
            //Crime Type
            if(j+1>=str.length()) return false;
            i = str.indexOf(":", j+1); i+=2;
            j = str.indexOf("\n", j+1);
            if(i==-1 || j==-1) return false ;
            sub = str.substring(i, j);
            if(checkForString(sub)) _ct = sub ;
            else return false ;
            
            //Date of Crime
            if(j+1>=str.length()) return false;
            i = str.indexOf(":", j+1); i+=2;
            j = str.indexOf("\n", j+1);
            if(i==-1 || j==-1) return false ;
            sub = str.substring(i, j);
            try{
                _doc = Date.valueOf(sub) ;
            }catch(IllegalArgumentException e){
                return false ;
            }
            
            //Location of Crime
            if(j+1>=str.length()) return false;
            i = str.indexOf(":", j+1); i+=2;
            j = str.indexOf("\n", j+1);
            if(i==-1 || j==-1) return false ;
            sub = str.substring(i, j);
            if(checkForString(sub)) _loc = sub ;
            else return false ;
            
            _tcase.getCrime().setCT(_ct);
            _tcase.getCrime().setCoC(_doc);
            _tcase.getCrime().setDoA(_doa);
            _tcase.getCrime().setLoC(_loc);
            _tcase.getCrime().setNoO(_naf);
            j = str.indexOf("\n", j+1);
            
        //cstat
        if(j+1>=str.length()) return false;
        i = str.indexOf(":", j+1); i+=2;
        j = str.indexOf("\n", j+1);
        if(i==-1 || j==-1) return false ;
        sub = str.substring(i, j);
        if(!sub.equals(Case._closed) && !sub.equals(Case._pending)) return false;
        
        //csum
        if(j+1>=str.length()) return false;
        i = str.indexOf(":", j+1); i+=2;
        j = str.indexOf("\n", j+1);
        if(i==-1 || j==-1) return false ;
        sub = str.substring(i, j);
        if(_cref.getCaseSummary().equals("") && !sub.equals(""))  return false;
        if(!_cref.getCaseSummary().equals("") && sub.equals(""))  return false;
        _tcase.updateCaseSummary(sub);
        
        return true ;
    }
    
    public void setHearingDetails(String _hd){
        ta_hearingDetails.setText(_hd);
    }

    public String getHearingDetails(){
        return ta_hearingDetails.getText();
    }

    public int getCB_HN(){
        return (cb_hearingNo.getSelectedIndex()) ;
    }

    public void setCB_HN(int _end){
        cb_hearingNo.removeAllItems();
        for(int i = 0 ; i < _end ; i++){
            cb_hearingNo.addItem(i);
        }
        cb_hearingNo.setSelectedIndex(0);
    }
    
    public void populateInfo(Case _ref){
        _cref = _ref;
        setCaseDetails(_ref.getCaseDetails());
        setCB_HN(_ref.getNoH());
        
        if(_mode == M_VC) {
            setHearingDetails(_ref.getHearingDetails(0));
            ta_caseDetails.setEditable(false);
            ta_hearingDetails.setEditable(false);
            b_edit.setEnabled(false);
        }else if(_mode == M_UC) {
            setHearingDetails(_ref.getHearingDetails(0));
            ta_caseDetails.setEditable(true);
            ta_hearingDetails.setEditable(false);
            b_edit.setEnabled(true);
        }
    }
    
}
